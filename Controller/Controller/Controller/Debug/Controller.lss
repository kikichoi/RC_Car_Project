
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000ba6  00000c3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ba6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000096  0080011e  0080011e  00000c58  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001564  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f0  00000000  00000000  000023c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aa1  00000000  00000000  00002db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000480  00000000  00000000  00003858  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000713  00000000  00000000  00003cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ccd  00000000  00000000  000043eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  000050b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	8d c2       	rjmp	.+1306   	; 0x54c <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	97 c1       	rjmp	.+814    	; 0x378 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	b9 c1       	rjmp	.+882    	; 0x3c8 <__vector_21>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	56 c1       	rjmp	.+684    	; 0x326 <__vector_30>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 ea       	ldi	r30, 0xA6	; 166
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 31       	cpi	r26, 0x1E	; 30
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e1       	ldi	r26, 0x1E	; 30
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 3b       	cpi	r26, 0xB4	; 180
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	84 d2       	rcall	.+1288   	; 0x5cc <main>
  c4:	6e c5       	rjmp	.+2780   	; 0xba2 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <uart0_init>:

void Interrupt7_init()
{
	EIMSK = (1<<INT7); //외부 인터럽트 INT1 선택
	EICRA = (1<<ISC11); //하강 (1<<ISC11)|(1<<ISC10); //=상승 , 
	sei(); //전체 인터럽트 허가 
  c8:	81 15       	cp	r24, r1
  ca:	26 e9       	ldi	r18, 0x96	; 150
  cc:	92 07       	cpc	r25, r18
  ce:	59 f0       	breq	.+22     	; 0xe6 <uart0_init+0x1e>
  d0:	81 15       	cp	r24, r1
  d2:	22 ec       	ldi	r18, 0xC2	; 194
  d4:	92 07       	cpc	r25, r18
  d6:	21 f0       	breq	.+8      	; 0xe0 <uart0_init+0x18>
  d8:	80 38       	cpi	r24, 0x80	; 128
  da:	95 42       	sbci	r25, 0x25	; 37
  dc:	49 f4       	brne	.+18     	; 0xf0 <uart0_init+0x28>
  de:	06 c0       	rjmp	.+12     	; 0xec <uart0_init+0x24>
  e0:	87 e0       	ldi	r24, 0x07	; 7
  e2:	89 b9       	out	0x09, r24	; 9
  e4:	05 c0       	rjmp	.+10     	; 0xf0 <uart0_init+0x28>
  e6:	87 e1       	ldi	r24, 0x17	; 23
  e8:	89 b9       	out	0x09, r24	; 9
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <uart0_init+0x28>
  ec:	8f e5       	ldi	r24, 0x5F	; 95
  ee:	89 b9       	out	0x09, r24	; 9
  f0:	88 e1       	ldi	r24, 0x18	; 24
  f2:	8a b9       	out	0x0a, r24	; 10
  f4:	86 e0       	ldi	r24, 0x06	; 6
  f6:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
  fa:	08 95       	ret

000000fc <InterruptInit0_Rx>:
  fc:	8a b1       	in	r24, 0x0a	; 10
  fe:	80 68       	ori	r24, 0x80	; 128
 100:	8a b9       	out	0x0a, r24	; 10
 102:	78 94       	sei
 104:	08 95       	ret

00000106 <uart0_transmit>:
 106:	5d 9b       	sbis	0x0b, 5	; 11
 108:	fe cf       	rjmp	.-4      	; 0x106 <uart0_transmit>
 10a:	8c b9       	out	0x0c, r24	; 12
 10c:	08 95       	ret

0000010e <uart0_transmit_string_with_length>:
 10e:	ef 92       	push	r14
 110:	ff 92       	push	r15
 112:	0f 93       	push	r16
 114:	1f 93       	push	r17
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	7c 01       	movw	r14, r24
 11c:	8b 01       	movw	r16, r22
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	06 c0       	rjmp	.+12     	; 0x130 <uart0_transmit_string_with_length+0x22>
 124:	f7 01       	movw	r30, r14
 126:	ec 0f       	add	r30, r28
 128:	fd 1f       	adc	r31, r29
 12a:	80 81       	ld	r24, Z
 12c:	ec df       	rcall	.-40     	; 0x106 <uart0_transmit>
 12e:	21 96       	adiw	r28, 0x01	; 1
 130:	c0 17       	cp	r28, r16
 132:	d1 07       	cpc	r29, r17
 134:	bc f3       	brlt	.-18     	; 0x124 <uart0_transmit_string_with_length+0x16>
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	1f 91       	pop	r17
 13c:	0f 91       	pop	r16
 13e:	ff 90       	pop	r15
 140:	ef 90       	pop	r14
 142:	08 95       	ret

00000144 <uart1_init>:
 144:	81 15       	cp	r24, r1
 146:	26 e9       	ldi	r18, 0x96	; 150
 148:	92 07       	cpc	r25, r18
 14a:	61 f0       	breq	.+24     	; 0x164 <uart1_init+0x20>
 14c:	81 15       	cp	r24, r1
 14e:	22 ec       	ldi	r18, 0xC2	; 194
 150:	92 07       	cpc	r25, r18
 152:	21 f0       	breq	.+8      	; 0x15c <uart1_init+0x18>
 154:	80 38       	cpi	r24, 0x80	; 128
 156:	95 42       	sbci	r25, 0x25	; 37
 158:	61 f4       	brne	.+24     	; 0x172 <uart1_init+0x2e>
 15a:	08 c0       	rjmp	.+16     	; 0x16c <uart1_init+0x28>
 15c:	87 e0       	ldi	r24, 0x07	; 7
 15e:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 162:	07 c0       	rjmp	.+14     	; 0x172 <uart1_init+0x2e>
 164:	87 e1       	ldi	r24, 0x17	; 23
 166:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 16a:	03 c0       	rjmp	.+6      	; 0x172 <uart1_init+0x2e>
 16c:	8f e5       	ldi	r24, 0x5F	; 95
 16e:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 172:	88 e1       	ldi	r24, 0x18	; 24
 174:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 178:	86 e0       	ldi	r24, 0x06	; 6
 17a:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 17e:	08 95       	ret

00000180 <InterruptInit1_Rx>:
 180:	ea e9       	ldi	r30, 0x9A	; 154
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	80 81       	ld	r24, Z
 186:	80 68       	ori	r24, 0x80	; 128
 188:	80 83       	st	Z, r24
 18a:	78 94       	sei
 18c:	08 95       	ret

0000018e <uart1_transmit>:
 18e:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 192:	95 ff       	sbrs	r25, 5
 194:	fc cf       	rjmp	.-8      	; 0x18e <uart1_transmit>
 196:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 19a:	08 95       	ret

0000019c <uart1_transmit_string_with_length>:
 19c:	ef 92       	push	r14
 19e:	ff 92       	push	r15
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	7c 01       	movw	r14, r24
 1aa:	8b 01       	movw	r16, r22
 1ac:	c0 e0       	ldi	r28, 0x00	; 0
 1ae:	d0 e0       	ldi	r29, 0x00	; 0
 1b0:	06 c0       	rjmp	.+12     	; 0x1be <uart1_transmit_string_with_length+0x22>
 1b2:	f7 01       	movw	r30, r14
 1b4:	ec 0f       	add	r30, r28
 1b6:	fd 1f       	adc	r31, r29
 1b8:	80 81       	ld	r24, Z
 1ba:	e9 df       	rcall	.-46     	; 0x18e <uart1_transmit>
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	c0 17       	cp	r28, r16
 1c0:	d1 07       	cpc	r29, r17
 1c2:	bc f3       	brlt	.-18     	; 0x1b2 <uart1_transmit_string_with_length+0x16>
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	1f 91       	pop	r17
 1ca:	0f 91       	pop	r16
 1cc:	ff 90       	pop	r15
 1ce:	ef 90       	pop	r14
 1d0:	08 95       	ret

000001d2 <hc06_init>:
 1d2:	8f ef       	ldi	r24, 0xFF	; 255
 1d4:	82 b9       	out	0x02, r24	; 2
 1d6:	83 b1       	in	r24, 0x03	; 3
 1d8:	8f 7e       	andi	r24, 0xEF	; 239
 1da:	83 b9       	out	0x03, r24	; 3
 1dc:	08 95       	ret

000001de <ISR_CTC_Init>:
 1de:	8e b5       	in	r24, 0x2e	; 46
 1e0:	88 60       	ori	r24, 0x08	; 8
 1e2:	8e bd       	out	0x2e, r24	; 46
 1e4:	85 ee       	ldi	r24, 0xE5	; 229
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	9b bd       	out	0x2b, r25	; 43
 1ea:	8a bd       	out	0x2a, r24	; 42
 1ec:	8e b5       	in	r24, 0x2e	; 46
 1ee:	83 60       	ori	r24, 0x03	; 3
 1f0:	8e bd       	out	0x2e, r24	; 46
 1f2:	87 b7       	in	r24, 0x37	; 55
 1f4:	80 61       	ori	r24, 0x10	; 16
 1f6:	87 bf       	out	0x37, r24	; 55
 1f8:	78 94       	sei
 1fa:	08 95       	ret

000001fc <ADC_Init>:
 1fc:	17 b8       	out	0x07, r1	; 7
 1fe:	16 b8       	out	0x06, r1	; 6
 200:	87 b1       	in	r24, 0x07	; 7
 202:	80 64       	ori	r24, 0x40	; 64
 204:	87 b9       	out	0x07, r24	; 7
 206:	86 b1       	in	r24, 0x06	; 6
 208:	83 6a       	ori	r24, 0xA3	; 163
 20a:	86 b9       	out	0x06, r24	; 6
 20c:	78 94       	sei
 20e:	08 95       	ret

00000210 <Read_ADC_Data>:
 210:	97 b1       	in	r25, 0x07	; 7
 212:	90 7e       	andi	r25, 0xE0	; 224
 214:	97 b9       	out	0x07, r25	; 7
 216:	97 b1       	in	r25, 0x07	; 7
 218:	87 70       	andi	r24, 0x07	; 7
 21a:	98 2b       	or	r25, r24
 21c:	97 b9       	out	0x07, r25	; 7
 21e:	86 b1       	in	r24, 0x06	; 6
 220:	80 64       	ori	r24, 0x40	; 64
 222:	86 b9       	out	0x06, r24	; 6
 224:	34 9b       	sbis	0x06, 4	; 6
 226:	fe cf       	rjmp	.-4      	; 0x224 <Read_ADC_Data+0x14>
 228:	24 b1       	in	r18, 0x04	; 4
 22a:	85 b1       	in	r24, 0x05	; 5
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	98 2f       	mov	r25, r24
 230:	88 27       	eor	r24, r24
 232:	82 2b       	or	r24, r18
 234:	08 95       	ret

00000236 <LCD_Data>:
 236:	e5 e6       	ldi	r30, 0x65	; 101
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	90 81       	ld	r25, Z
 23c:	94 60       	ori	r25, 0x04	; 4
 23e:	90 83       	st	Z, r25
 240:	90 81       	ld	r25, Z
 242:	9d 7f       	andi	r25, 0xFD	; 253
 244:	90 83       	st	Z, r25
 246:	90 81       	ld	r25, Z
 248:	91 60       	ori	r25, 0x01	; 1
 24a:	90 83       	st	Z, r25
 24c:	96 ef       	ldi	r25, 0xF6	; 246
 24e:	9a 95       	dec	r25
 250:	f1 f7       	brne	.-4      	; 0x24e <LCD_Data+0x18>
 252:	8b bb       	out	0x1b, r24	; 27
 254:	86 ef       	ldi	r24, 0xF6	; 246
 256:	8a 95       	dec	r24
 258:	f1 f7       	brne	.-4      	; 0x256 <LCD_Data+0x20>
 25a:	80 81       	ld	r24, Z
 25c:	8e 7f       	andi	r24, 0xFE	; 254
 25e:	80 83       	st	Z, r24
 260:	08 95       	ret

00000262 <LCD_Comm>:
 262:	e5 e6       	ldi	r30, 0x65	; 101
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	90 81       	ld	r25, Z
 268:	9b 7f       	andi	r25, 0xFB	; 251
 26a:	90 83       	st	Z, r25
 26c:	90 81       	ld	r25, Z
 26e:	9d 7f       	andi	r25, 0xFD	; 253
 270:	90 83       	st	Z, r25
 272:	90 81       	ld	r25, Z
 274:	91 60       	ori	r25, 0x01	; 1
 276:	90 83       	st	Z, r25
 278:	96 ef       	ldi	r25, 0xF6	; 246
 27a:	9a 95       	dec	r25
 27c:	f1 f7       	brne	.-4      	; 0x27a <LCD_Comm+0x18>
 27e:	8b bb       	out	0x1b, r24	; 27
 280:	86 ef       	ldi	r24, 0xF6	; 246
 282:	8a 95       	dec	r24
 284:	f1 f7       	brne	.-4      	; 0x282 <LCD_Comm+0x20>
 286:	80 81       	ld	r24, Z
 288:	8e 7f       	andi	r24, 0xFE	; 254
 28a:	80 83       	st	Z, r24
 28c:	08 95       	ret

0000028e <LCD_Delay>:
 28e:	06 c0       	rjmp	.+12     	; 0x29c <LCD_Delay+0xe>
 290:	e6 e6       	ldi	r30, 0x66	; 102
 292:	fe e0       	ldi	r31, 0x0E	; 14
 294:	31 97       	sbiw	r30, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <LCD_Delay+0x6>
 298:	00 00       	nop
 29a:	89 2f       	mov	r24, r25
 29c:	9f ef       	ldi	r25, 0xFF	; 255
 29e:	98 0f       	add	r25, r24
 2a0:	81 11       	cpse	r24, r1
 2a2:	f6 cf       	rjmp	.-20     	; 0x290 <LCD_Delay+0x2>
 2a4:	08 95       	ret

000002a6 <LCD_Char>:
 2a6:	cf 93       	push	r28
 2a8:	c8 2f       	mov	r28, r24
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	f0 df       	rcall	.-32     	; 0x28e <LCD_Delay>
 2ae:	8c 2f       	mov	r24, r28
 2b0:	c2 df       	rcall	.-124    	; 0x236 <LCD_Data>
 2b2:	cf 91       	pop	r28
 2b4:	08 95       	ret

000002b6 <LCD_Str>:
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	ec 01       	movw	r28, r24
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <LCD_Str+0xc>
 2be:	f3 df       	rcall	.-26     	; 0x2a6 <LCD_Char>
 2c0:	21 96       	adiw	r28, 0x01	; 1
 2c2:	88 81       	ld	r24, Y
 2c4:	81 11       	cpse	r24, r1
 2c6:	fb cf       	rjmp	.-10     	; 0x2be <LCD_Str+0x8>
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	08 95       	ret

000002ce <LCD_Pos>:
 2ce:	90 e4       	ldi	r25, 0x40	; 64
 2d0:	89 9f       	mul	r24, r25
 2d2:	60 0d       	add	r22, r0
 2d4:	11 24       	eor	r1, r1
 2d6:	86 2f       	mov	r24, r22
 2d8:	80 68       	ori	r24, 0x80	; 128
 2da:	c3 cf       	rjmp	.-122    	; 0x262 <LCD_Comm>
 2dc:	08 95       	ret

000002de <LCD_Clear>:
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	c0 df       	rcall	.-128    	; 0x262 <LCD_Comm>
 2e2:	82 e0       	ldi	r24, 0x02	; 2
 2e4:	d4 cf       	rjmp	.-88     	; 0x28e <LCD_Delay>
 2e6:	08 95       	ret

000002e8 <LCD_PORT_Init>:
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	8a bb       	out	0x1a, r24	; 26
 2ec:	e4 e6       	ldi	r30, 0x64	; 100
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	8f 60       	ori	r24, 0x0F	; 15
 2f4:	80 83       	st	Z, r24
 2f6:	08 95       	ret

000002f8 <LCD_Init>:
 2f8:	f7 df       	rcall	.-18     	; 0x2e8 <LCD_PORT_Init>
 2fa:	88 e3       	ldi	r24, 0x38	; 56
 2fc:	b2 df       	rcall	.-156    	; 0x262 <LCD_Comm>
 2fe:	84 e0       	ldi	r24, 0x04	; 4
 300:	c6 df       	rcall	.-116    	; 0x28e <LCD_Delay>
 302:	88 e3       	ldi	r24, 0x38	; 56
 304:	ae df       	rcall	.-164    	; 0x262 <LCD_Comm>
 306:	84 e0       	ldi	r24, 0x04	; 4
 308:	c2 df       	rcall	.-124    	; 0x28e <LCD_Delay>
 30a:	88 e3       	ldi	r24, 0x38	; 56
 30c:	aa df       	rcall	.-172    	; 0x262 <LCD_Comm>
 30e:	84 e0       	ldi	r24, 0x04	; 4
 310:	be df       	rcall	.-132    	; 0x28e <LCD_Delay>
 312:	8e e0       	ldi	r24, 0x0E	; 14
 314:	a6 df       	rcall	.-180    	; 0x262 <LCD_Comm>
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	ba df       	rcall	.-140    	; 0x28e <LCD_Delay>
 31a:	86 e0       	ldi	r24, 0x06	; 6
 31c:	a2 df       	rcall	.-188    	; 0x262 <LCD_Comm>
 31e:	82 e0       	ldi	r24, 0x02	; 2
 320:	b6 df       	rcall	.-148    	; 0x28e <LCD_Delay>
 322:	dd cf       	rjmp	.-70     	; 0x2de <LCD_Clear>
 324:	08 95       	ret

00000326 <__vector_30>:
	}
	else{}
}

ISR(USART1_RX_vect)
{
 326:	1f 92       	push	r1
 328:	0f 92       	push	r0
 32a:	0f b6       	in	r0, 0x3f	; 63
 32c:	0f 92       	push	r0
 32e:	11 24       	eor	r1, r1
 330:	0b b6       	in	r0, 0x3b	; 59
 332:	0f 92       	push	r0
 334:	2f 93       	push	r18
 336:	3f 93       	push	r19
 338:	4f 93       	push	r20
 33a:	5f 93       	push	r21
 33c:	6f 93       	push	r22
 33e:	7f 93       	push	r23
 340:	8f 93       	push	r24
 342:	9f 93       	push	r25
 344:	af 93       	push	r26
 346:	bf 93       	push	r27
 348:	ef 93       	push	r30
 34a:	ff 93       	push	r31
	char RX1_data = UDR1;
 34c:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	//uart1_transmit(RX1_data);
	uart0_transmit(RX1_data);
 350:	da de       	rcall	.-588    	; 0x106 <uart0_transmit>
}
 352:	ff 91       	pop	r31
 354:	ef 91       	pop	r30
 356:	bf 91       	pop	r27
 358:	af 91       	pop	r26
 35a:	9f 91       	pop	r25
 35c:	8f 91       	pop	r24
 35e:	7f 91       	pop	r23
 360:	6f 91       	pop	r22
 362:	5f 91       	pop	r21
 364:	4f 91       	pop	r20
 366:	3f 91       	pop	r19
 368:	2f 91       	pop	r18
 36a:	0f 90       	pop	r0
 36c:	0b be       	out	0x3b, r0	; 59
 36e:	0f 90       	pop	r0
 370:	0f be       	out	0x3f, r0	; 63
 372:	0f 90       	pop	r0
 374:	1f 90       	pop	r1
 376:	18 95       	reti

00000378 <__vector_18>:

ISR(USART0_RX_vect)
{// 블루투스 값 수신
 378:	1f 92       	push	r1
 37a:	0f 92       	push	r0
 37c:	0f b6       	in	r0, 0x3f	; 63
 37e:	0f 92       	push	r0
 380:	11 24       	eor	r1, r1
 382:	0b b6       	in	r0, 0x3b	; 59
 384:	0f 92       	push	r0
 386:	2f 93       	push	r18
 388:	3f 93       	push	r19
 38a:	4f 93       	push	r20
 38c:	5f 93       	push	r21
 38e:	6f 93       	push	r22
 390:	7f 93       	push	r23
 392:	8f 93       	push	r24
 394:	9f 93       	push	r25
 396:	af 93       	push	r26
 398:	bf 93       	push	r27
 39a:	ef 93       	push	r30
 39c:	ff 93       	push	r31
	char RX0_data;
	RX0_data = UDR0;	
 39e:	8c b1       	in	r24, 0x0c	; 12
	uart1_transmit(RX0_data);
 3a0:	f6 de       	rcall	.-532    	; 0x18e <uart1_transmit>
}
 3a2:	ff 91       	pop	r31
 3a4:	ef 91       	pop	r30
 3a6:	bf 91       	pop	r27
 3a8:	af 91       	pop	r26
 3aa:	9f 91       	pop	r25
 3ac:	8f 91       	pop	r24
 3ae:	7f 91       	pop	r23
 3b0:	6f 91       	pop	r22
 3b2:	5f 91       	pop	r21
 3b4:	4f 91       	pop	r20
 3b6:	3f 91       	pop	r19
 3b8:	2f 91       	pop	r18
 3ba:	0f 90       	pop	r0
 3bc:	0b be       	out	0x3b, r0	; 59
 3be:	0f 90       	pop	r0
 3c0:	0f be       	out	0x3f, r0	; 63
 3c2:	0f 90       	pop	r0
 3c4:	1f 90       	pop	r1
 3c6:	18 95       	reti

000003c8 <__vector_21>:

ISR(ADC_vect)
{
 3c8:	1f 92       	push	r1
 3ca:	0f 92       	push	r0
 3cc:	0f b6       	in	r0, 0x3f	; 63
 3ce:	0f 92       	push	r0
 3d0:	11 24       	eor	r1, r1
 3d2:	8f 93       	push	r24
 3d4:	9f 93       	push	r25
	ADC_Data = ADCW; // ADC 값 읽기.
 3d6:	84 b1       	in	r24, 0x04	; 4
 3d8:	95 b1       	in	r25, 0x05	; 5
 3da:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <ADC_Data+0x1>
 3de:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <ADC_Data>
}
 3e2:	9f 91       	pop	r25
 3e4:	8f 91       	pop	r24
 3e6:	0f 90       	pop	r0
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	0f 90       	pop	r0
 3ec:	1f 90       	pop	r1
 3ee:	18 95       	reti

000003f0 <TX0_Packet>:

void TX0_Packet()
{
 3f0:	0f 93       	push	r16
 3f2:	1f 93       	push	r17
 3f4:	cf 93       	push	r28
 3f6:	df 93       	push	r29
 3f8:	cd b7       	in	r28, 0x3d	; 61
 3fa:	de b7       	in	r29, 0x3e	; 62
 3fc:	2b 97       	sbiw	r28, 0x0b	; 11
 3fe:	0f b6       	in	r0, 0x3f	; 63
 400:	f8 94       	cli
 402:	de bf       	out	0x3e, r29	; 62
 404:	0f be       	out	0x3f, r0	; 63
 406:	cd bf       	out	0x3d, r28	; 61
	unsigned char tx0_buff[11] = {0,};
 408:	8e 01       	movw	r16, r28
 40a:	0f 5f       	subi	r16, 0xFF	; 255
 40c:	1f 4f       	sbci	r17, 0xFF	; 255
 40e:	8b e0       	ldi	r24, 0x0B	; 11
 410:	f8 01       	movw	r30, r16
 412:	11 92       	st	Z+, r1
 414:	8a 95       	dec	r24
 416:	e9 f7       	brne	.-6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
	unsigned char idx = 0;	
	
	tx0_buff[idx++] = Start; // 시작 비트
 418:	8a ea       	ldi	r24, 0xAA	; 170
 41a:	89 83       	std	Y+1, r24	; 0x01
	
	//전진, 후진 정보 , int형태 char로 변환
	tx0_buff[idx++] = (adc_Y >> 24) & 0xFF; // 가장 높은 바이트
 41c:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <adc_Y>
 420:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <adc_Y+0x1>
 424:	33 0f       	add	r19, r19
 426:	22 0b       	sbc	r18, r18
 428:	32 2f       	mov	r19, r18
 42a:	2a 83       	std	Y+2, r18	; 0x02
	tx0_buff[idx++] = (adc_Y >> 16) & 0xFF; // 두 번째 바이트
 42c:	33 0f       	add	r19, r19
 42e:	22 0b       	sbc	r18, r18
 430:	32 2f       	mov	r19, r18
 432:	2b 83       	std	Y+3, r18	; 0x03
	tx0_buff[idx++] = (adc_Y >> 8) & 0xFF;  // 세 번째 바이트
 434:	9c 83       	std	Y+4, r25	; 0x04
	tx0_buff[idx++] = adc_Y & 0xFF;         // 가장 낮은 바이트
 436:	8d 83       	std	Y+5, r24	; 0x05
	
	//좌회전, 우회전 정보
	tx0_buff[idx++] = (adc_X >> 24) & 0xFF; // 가장 높은 바이트
 438:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <adc_X>
 43c:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <adc_X+0x1>
 440:	33 0f       	add	r19, r19
 442:	22 0b       	sbc	r18, r18
 444:	32 2f       	mov	r19, r18
 446:	2e 83       	std	Y+6, r18	; 0x06
	tx0_buff[idx++] = (adc_X >> 16) & 0xFF; // 두 번째 바이트
 448:	33 0f       	add	r19, r19
 44a:	22 0b       	sbc	r18, r18
 44c:	32 2f       	mov	r19, r18
 44e:	2f 83       	std	Y+7, r18	; 0x07
	tx0_buff[idx++] = (adc_X >> 8) & 0xFF;  // 세 번째 바이트
 450:	98 87       	std	Y+8, r25	; 0x08
	tx0_buff[idx++] = adc_X & 0xFF;         // 가장 낮은 바이트
 452:	89 87       	std	Y+9, r24	; 0x09
	
	tx0_buff[idx++] = pump; // 발사버튼 정보
 454:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 458:	8a 87       	std	Y+10, r24	; 0x0a
	tx0_buff[idx++] = End; // 종료 비트	
 45a:	8f ea       	ldi	r24, 0xAF	; 175
 45c:	8b 87       	std	Y+11, r24	; 0x0b
	
	// 0x00값 패킷 마지막이 아닌 중간에 껴있는 경우 종료됨을 방지하고자 길이만큼 전송
	uart0_transmit_string_with_length(tx0_buff,11);
 45e:	6b e0       	ldi	r22, 0x0B	; 11
 460:	70 e0       	ldi	r23, 0x00	; 0
 462:	c8 01       	movw	r24, r16
 464:	54 de       	rcall	.-856    	; 0x10e <uart0_transmit_string_with_length>
	uart1_transmit_string_with_length(tx0_buff,11);
 466:	6b e0       	ldi	r22, 0x0B	; 11
 468:	70 e0       	ldi	r23, 0x00	; 0
 46a:	c8 01       	movw	r24, r16
 46c:	97 de       	rcall	.-722    	; 0x19c <uart1_transmit_string_with_length>
}
 46e:	2b 96       	adiw	r28, 0x0b	; 11
 470:	0f b6       	in	r0, 0x3f	; 63
 472:	f8 94       	cli
 474:	de bf       	out	0x3e, r29	; 62
 476:	0f be       	out	0x3f, r0	; 63
 478:	cd bf       	out	0x3d, r28	; 61
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	1f 91       	pop	r17
 480:	0f 91       	pop	r16
 482:	08 95       	ret

00000484 <LCD_print>:
	
	LCD_print();
}

void LCD_print()
{
 484:	cf 93       	push	r28
 486:	df 93       	push	r29
	// 조이스틱 X값을 확인하기 위해 LCD에 출력.
	sprintf(Message,"X: %04d ", adc_X);
 488:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <adc_X+0x1>
 48c:	8f 93       	push	r24
 48e:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <adc_X>
 492:	8f 93       	push	r24
 494:	8b e0       	ldi	r24, 0x0B	; 11
 496:	91 e0       	ldi	r25, 0x01	; 1
 498:	9f 93       	push	r25
 49a:	8f 93       	push	r24
 49c:	c7 e8       	ldi	r28, 0x87	; 135
 49e:	d1 e0       	ldi	r29, 0x01	; 1
 4a0:	df 93       	push	r29
 4a2:	cf 93       	push	r28
 4a4:	a3 d0       	rcall	.+326    	; 0x5ec <sprintf>
	LCD_Pos(0,0);
 4a6:	60 e0       	ldi	r22, 0x00	; 0
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	11 df       	rcall	.-478    	; 0x2ce <LCD_Pos>
	LCD_Str(Message);
 4ac:	ce 01       	movw	r24, r28
 4ae:	03 df       	rcall	.-506    	; 0x2b6 <LCD_Str>
 4b0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <adc_Y+0x1>
	
	// 조이스틱 Y값을 확인하기 위해 LCD에 출력.
	sprintf(Message,"Y: %04d ", adc_Y);
 4b4:	8f 93       	push	r24
 4b6:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <adc_Y>
 4ba:	8f 93       	push	r24
 4bc:	84 e1       	ldi	r24, 0x14	; 20
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	9f 93       	push	r25
 4c2:	8f 93       	push	r24
 4c4:	df 93       	push	r29
 4c6:	cf 93       	push	r28
 4c8:	91 d0       	rcall	.+290    	; 0x5ec <sprintf>
	LCD_Pos(1,0);
 4ca:	60 e0       	ldi	r22, 0x00	; 0
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	ff de       	rcall	.-514    	; 0x2ce <LCD_Pos>
	LCD_Str(Message);
 4d0:	ce 01       	movw	r24, r28
 4d2:	f1 de       	rcall	.-542    	; 0x2b6 <LCD_Str>
 4d4:	8d b7       	in	r24, 0x3d	; 61
}
 4d6:	9e b7       	in	r25, 0x3e	; 62
 4d8:	0c 96       	adiw	r24, 0x0c	; 12
 4da:	0f b6       	in	r0, 0x3f	; 63
 4dc:	f8 94       	cli
 4de:	9e bf       	out	0x3e, r25	; 62
 4e0:	0f be       	out	0x3f, r0	; 63
 4e2:	8d bf       	out	0x3d, r24	; 61
 4e4:	df 91       	pop	r29
 4e6:	cf 91       	pop	r28
 4e8:	08 95       	ret

000004ea <Joystick_Read>:
 4ea:	80 e0       	ldi	r24, 0x00	; 0
	uart1_transmit_string_with_length(tx0_buff,11);
}

void Joystick_Read()
{	
	adc_X = Read_ADC_Data(0); // 조이스틱의 X축 값 읽음.
 4ec:	91 de       	rcall	.-734    	; 0x210 <Read_ADC_Data>
 4ee:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <adc_X+0x1>
 4f2:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <adc_X>
	adc_Y = Read_ADC_Data(1); // 조이스틱의 Y축 값 읽음.	
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	8b de       	rcall	.-746    	; 0x210 <Read_ADC_Data>
 4fa:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <adc_Y+0x1>
 4fe:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <adc_Y>
	if (adc_X <= 0)
 502:	20 91 af 01 	lds	r18, 0x01AF	; 0x8001af <adc_X>
 506:	30 91 b0 01 	lds	r19, 0x01B0	; 0x8001b0 <adc_X+0x1>
 50a:	12 16       	cp	r1, r18
 50c:	13 06       	cpc	r1, r19
 50e:	34 f0       	brlt	.+12     	; 0x51c <Joystick_Read+0x32>
	{
		adc_X = 1;
 510:	21 e0       	ldi	r18, 0x01	; 1
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	30 93 b0 01 	sts	0x01B0, r19	; 0x8001b0 <adc_X+0x1>
 518:	20 93 af 01 	sts	0x01AF, r18	; 0x8001af <adc_X>
	}
	
	if (adc_Y <= 0)
 51c:	18 16       	cp	r1, r24
 51e:	19 06       	cpc	r1, r25
 520:	34 f0       	brlt	.+12     	; 0x52e <Joystick_Read+0x44>
	{
		adc_Y = 1;
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <adc_Y+0x1>
 52a:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <adc_Y>
	}
	
	LCD_print();
 52e:	aa cf       	rjmp	.-172    	; 0x484 <LCD_print>
 530:	08 95       	ret

00000532 <SW_init>:
	LCD_Str(Message);
}

void SW_init()
{
	DDRD = 0xef;
 532:	8f ee       	ldi	r24, 0xEF	; 239
 534:	81 bb       	out	0x11, r24	; 17
 536:	08 95       	ret

00000538 <SW_read>:
}

void SW_read()
{
	if (PIND == 0b11101111)
 538:	80 b3       	in	r24, 0x10	; 16
 53a:	8f 3e       	cpi	r24, 0xEF	; 239
 53c:	21 f4       	brne	.+8      	; 0x546 <SW_read+0xe>
	{
		pump = 0xae;		
 53e:	8e ea       	ldi	r24, 0xAE	; 174
 540:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
 544:	08 95       	ret
	}
	else pump = 0;
 546:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <__data_end>
 54a:	08 95       	ret

0000054c <__vector_12>:
unsigned char pump = 0;

int timer_count ;

ISR(TIMER1_COMPA_vect)
{// 1ms interrupt 
 54c:	1f 92       	push	r1
 54e:	0f 92       	push	r0
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	0f 92       	push	r0
 554:	11 24       	eor	r1, r1
 556:	0b b6       	in	r0, 0x3b	; 59
 558:	0f 92       	push	r0
 55a:	2f 93       	push	r18
 55c:	3f 93       	push	r19
 55e:	4f 93       	push	r20
 560:	5f 93       	push	r21
 562:	6f 93       	push	r22
 564:	7f 93       	push	r23
 566:	8f 93       	push	r24
 568:	9f 93       	push	r25
 56a:	af 93       	push	r26
 56c:	bf 93       	push	r27
 56e:	ef 93       	push	r30
 570:	ff 93       	push	r31
	timer_count++;
 572:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <timer_count>
 576:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <timer_count+0x1>
 57a:	01 96       	adiw	r24, 0x01	; 1
 57c:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <timer_count+0x1>
 580:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <timer_count>
	
	if (timer_count % 1 == 0)
	{
		Joystick_Read();
 584:	b2 df       	rcall	.-156    	; 0x4ea <Joystick_Read>
		SW_read();
 586:	d8 df       	rcall	.-80     	; 0x538 <SW_read>
 588:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <timer_count>
		//uart1_transmit_string(Message); // 조이스틱 값 컴퓨터로 출력
	}
	else{}	
	
	if (timer_count % 2 == 0)
 58c:	80 ff       	sbrs	r24, 0
	{//2ms
		TX0_Packet();
 58e:	30 df       	rcall	.-416    	; 0x3f0 <TX0_Packet>
 590:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <timer_count>
		//_delay_ms(100); //임시 컴퓨터 출력 안정화 위함
	}
	else{}
		
	if (timer_count >= 100)
 594:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <timer_count+0x1>
 598:	84 36       	cpi	r24, 0x64	; 100
 59a:	91 05       	cpc	r25, r1
 59c:	24 f0       	brlt	.+8      	; 0x5a6 <__vector_12+0x5a>
 59e:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <timer_count+0x1>
	{
		timer_count = 0;
 5a2:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <timer_count>
 5a6:	ff 91       	pop	r31
	}
	else{}
}
 5a8:	ef 91       	pop	r30
 5aa:	bf 91       	pop	r27
 5ac:	af 91       	pop	r26
 5ae:	9f 91       	pop	r25
 5b0:	8f 91       	pop	r24
 5b2:	7f 91       	pop	r23
 5b4:	6f 91       	pop	r22
 5b6:	5f 91       	pop	r21
 5b8:	4f 91       	pop	r20
 5ba:	3f 91       	pop	r19
 5bc:	2f 91       	pop	r18
 5be:	0f 90       	pop	r0
 5c0:	0b be       	out	0x3b, r0	; 59
 5c2:	0f 90       	pop	r0
 5c4:	0f be       	out	0x3f, r0	; 63
 5c6:	0f 90       	pop	r0
 5c8:	1f 90       	pop	r1
 5ca:	18 95       	reti

000005cc <main>:
 5cc:	8f ef       	ldi	r24, 0xFF	; 255
	else pump = 0;
}

int main(void)
{
	DDRB = 0xff;
 5ce:	87 bb       	out	0x17, r24	; 23
	
	//UART
	uart1_init(115200);
 5d0:	80 e0       	ldi	r24, 0x00	; 0
 5d2:	92 ec       	ldi	r25, 0xC2	; 194
 5d4:	b7 dd       	rcall	.-1170   	; 0x144 <uart1_init>
	uart0_init(115200);
 5d6:	80 e0       	ldi	r24, 0x00	; 0
 5d8:	92 ec       	ldi	r25, 0xC2	; 194
	InterruptInit0_Rx();
 5da:	76 dd       	rcall	.-1300   	; 0xc8 <uart0_init>
	InterruptInit1_Rx();
 5dc:	8f dd       	rcall	.-1250   	; 0xfc <InterruptInit0_Rx>
	//uart1_transmit_string("hi choi \r\n"); // test
	//uart0_init(9600); // AT모드 설정시 HC05 진입 38400
	
	//Timer
	ISR_CTC_Init();
 5de:	d0 dd       	rcall	.-1120   	; 0x180 <InterruptInit1_Rx>
	
	//BT
	hc06_init();
 5e0:	fe dd       	rcall	.-1028   	; 0x1de <ISR_CTC_Init>
 5e2:	f7 dd       	rcall	.-1042   	; 0x1d2 <hc06_init>
	//hc06_command();		
	
	ADC_Init();
 5e4:	0b de       	rcall	.-1002   	; 0x1fc <ADC_Init>
 5e6:	88 de       	rcall	.-752    	; 0x2f8 <LCD_Init>
	LCD_Init();		
 5e8:	a4 df       	rcall	.-184    	; 0x532 <SW_init>
 5ea:	ff cf       	rjmp	.-2      	; 0x5ea <main+0x1e>

000005ec <sprintf>:
	SW_init();
 5ec:	0f 93       	push	r16
 5ee:	1f 93       	push	r17
 5f0:	cf 93       	push	r28
 5f2:	df 93       	push	r29
 5f4:	cd b7       	in	r28, 0x3d	; 61
 5f6:	de b7       	in	r29, 0x3e	; 62
 5f8:	2e 97       	sbiw	r28, 0x0e	; 14
 5fa:	0f b6       	in	r0, 0x3f	; 63
 5fc:	f8 94       	cli
 5fe:	de bf       	out	0x3e, r29	; 62
 600:	0f be       	out	0x3f, r0	; 63
 602:	cd bf       	out	0x3d, r28	; 61
 604:	0d 89       	ldd	r16, Y+21	; 0x15
 606:	1e 89       	ldd	r17, Y+22	; 0x16
 608:	86 e0       	ldi	r24, 0x06	; 6
 60a:	8c 83       	std	Y+4, r24	; 0x04
 60c:	1a 83       	std	Y+2, r17	; 0x02
 60e:	09 83       	std	Y+1, r16	; 0x01
 610:	8f ef       	ldi	r24, 0xFF	; 255
 612:	9f e7       	ldi	r25, 0x7F	; 127
 614:	9e 83       	std	Y+6, r25	; 0x06
 616:	8d 83       	std	Y+5, r24	; 0x05
 618:	ae 01       	movw	r20, r28
 61a:	47 5e       	subi	r20, 0xE7	; 231
 61c:	5f 4f       	sbci	r21, 0xFF	; 255
 61e:	6f 89       	ldd	r22, Y+23	; 0x17
 620:	78 8d       	ldd	r23, Y+24	; 0x18
 622:	ce 01       	movw	r24, r28
 624:	01 96       	adiw	r24, 0x01	; 1
 626:	10 d0       	rcall	.+32     	; 0x648 <vfprintf>
 628:	ef 81       	ldd	r30, Y+7	; 0x07
 62a:	f8 85       	ldd	r31, Y+8	; 0x08
 62c:	e0 0f       	add	r30, r16
 62e:	f1 1f       	adc	r31, r17
 630:	10 82       	st	Z, r1
 632:	2e 96       	adiw	r28, 0x0e	; 14
 634:	0f b6       	in	r0, 0x3f	; 63
 636:	f8 94       	cli
 638:	de bf       	out	0x3e, r29	; 62
 63a:	0f be       	out	0x3f, r0	; 63
 63c:	cd bf       	out	0x3d, r28	; 61
 63e:	df 91       	pop	r29
 640:	cf 91       	pop	r28
 642:	1f 91       	pop	r17
 644:	0f 91       	pop	r16
 646:	08 95       	ret

00000648 <vfprintf>:
 648:	2f 92       	push	r2
 64a:	3f 92       	push	r3
 64c:	4f 92       	push	r4
 64e:	5f 92       	push	r5
 650:	6f 92       	push	r6
 652:	7f 92       	push	r7
 654:	8f 92       	push	r8
 656:	9f 92       	push	r9
 658:	af 92       	push	r10
 65a:	bf 92       	push	r11
 65c:	cf 92       	push	r12
 65e:	df 92       	push	r13
 660:	ef 92       	push	r14
 662:	ff 92       	push	r15
 664:	0f 93       	push	r16
 666:	1f 93       	push	r17
 668:	cf 93       	push	r28
 66a:	df 93       	push	r29
 66c:	cd b7       	in	r28, 0x3d	; 61
 66e:	de b7       	in	r29, 0x3e	; 62
 670:	2b 97       	sbiw	r28, 0x0b	; 11
 672:	0f b6       	in	r0, 0x3f	; 63
 674:	f8 94       	cli
 676:	de bf       	out	0x3e, r29	; 62
 678:	0f be       	out	0x3f, r0	; 63
 67a:	cd bf       	out	0x3d, r28	; 61
 67c:	6c 01       	movw	r12, r24
 67e:	7b 01       	movw	r14, r22
 680:	8a 01       	movw	r16, r20
 682:	fc 01       	movw	r30, r24
 684:	17 82       	std	Z+7, r1	; 0x07
 686:	16 82       	std	Z+6, r1	; 0x06
 688:	83 81       	ldd	r24, Z+3	; 0x03
 68a:	81 ff       	sbrs	r24, 1
 68c:	bf c1       	rjmp	.+894    	; 0xa0c <vfprintf+0x3c4>
 68e:	ce 01       	movw	r24, r28
 690:	01 96       	adiw	r24, 0x01	; 1
 692:	3c 01       	movw	r6, r24
 694:	f6 01       	movw	r30, r12
 696:	93 81       	ldd	r25, Z+3	; 0x03
 698:	f7 01       	movw	r30, r14
 69a:	93 fd       	sbrc	r25, 3
 69c:	85 91       	lpm	r24, Z+
 69e:	93 ff       	sbrs	r25, 3
 6a0:	81 91       	ld	r24, Z+
 6a2:	7f 01       	movw	r14, r30
 6a4:	88 23       	and	r24, r24
 6a6:	09 f4       	brne	.+2      	; 0x6aa <vfprintf+0x62>
 6a8:	ad c1       	rjmp	.+858    	; 0xa04 <vfprintf+0x3bc>
 6aa:	85 32       	cpi	r24, 0x25	; 37
 6ac:	39 f4       	brne	.+14     	; 0x6bc <vfprintf+0x74>
 6ae:	93 fd       	sbrc	r25, 3
 6b0:	85 91       	lpm	r24, Z+
 6b2:	93 ff       	sbrs	r25, 3
 6b4:	81 91       	ld	r24, Z+
 6b6:	7f 01       	movw	r14, r30
 6b8:	85 32       	cpi	r24, 0x25	; 37
 6ba:	21 f4       	brne	.+8      	; 0x6c4 <vfprintf+0x7c>
 6bc:	b6 01       	movw	r22, r12
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	d6 d1       	rcall	.+940    	; 0xa6e <fputc>
 6c2:	e8 cf       	rjmp	.-48     	; 0x694 <vfprintf+0x4c>
 6c4:	91 2c       	mov	r9, r1
 6c6:	21 2c       	mov	r2, r1
 6c8:	31 2c       	mov	r3, r1
 6ca:	ff e1       	ldi	r31, 0x1F	; 31
 6cc:	f3 15       	cp	r31, r3
 6ce:	d8 f0       	brcs	.+54     	; 0x706 <vfprintf+0xbe>
 6d0:	8b 32       	cpi	r24, 0x2B	; 43
 6d2:	79 f0       	breq	.+30     	; 0x6f2 <vfprintf+0xaa>
 6d4:	38 f4       	brcc	.+14     	; 0x6e4 <vfprintf+0x9c>
 6d6:	80 32       	cpi	r24, 0x20	; 32
 6d8:	79 f0       	breq	.+30     	; 0x6f8 <vfprintf+0xb0>
 6da:	83 32       	cpi	r24, 0x23	; 35
 6dc:	a1 f4       	brne	.+40     	; 0x706 <vfprintf+0xbe>
 6de:	23 2d       	mov	r18, r3
 6e0:	20 61       	ori	r18, 0x10	; 16
 6e2:	1d c0       	rjmp	.+58     	; 0x71e <vfprintf+0xd6>
 6e4:	8d 32       	cpi	r24, 0x2D	; 45
 6e6:	61 f0       	breq	.+24     	; 0x700 <vfprintf+0xb8>
 6e8:	80 33       	cpi	r24, 0x30	; 48
 6ea:	69 f4       	brne	.+26     	; 0x706 <vfprintf+0xbe>
 6ec:	23 2d       	mov	r18, r3
 6ee:	21 60       	ori	r18, 0x01	; 1
 6f0:	16 c0       	rjmp	.+44     	; 0x71e <vfprintf+0xd6>
 6f2:	83 2d       	mov	r24, r3
 6f4:	82 60       	ori	r24, 0x02	; 2
 6f6:	38 2e       	mov	r3, r24
 6f8:	e3 2d       	mov	r30, r3
 6fa:	e4 60       	ori	r30, 0x04	; 4
 6fc:	3e 2e       	mov	r3, r30
 6fe:	2a c0       	rjmp	.+84     	; 0x754 <vfprintf+0x10c>
 700:	f3 2d       	mov	r31, r3
 702:	f8 60       	ori	r31, 0x08	; 8
 704:	1d c0       	rjmp	.+58     	; 0x740 <vfprintf+0xf8>
 706:	37 fc       	sbrc	r3, 7
 708:	2d c0       	rjmp	.+90     	; 0x764 <vfprintf+0x11c>
 70a:	20 ed       	ldi	r18, 0xD0	; 208
 70c:	28 0f       	add	r18, r24
 70e:	2a 30       	cpi	r18, 0x0A	; 10
 710:	40 f0       	brcs	.+16     	; 0x722 <vfprintf+0xda>
 712:	8e 32       	cpi	r24, 0x2E	; 46
 714:	b9 f4       	brne	.+46     	; 0x744 <vfprintf+0xfc>
 716:	36 fc       	sbrc	r3, 6
 718:	75 c1       	rjmp	.+746    	; 0xa04 <vfprintf+0x3bc>
 71a:	23 2d       	mov	r18, r3
 71c:	20 64       	ori	r18, 0x40	; 64
 71e:	32 2e       	mov	r3, r18
 720:	19 c0       	rjmp	.+50     	; 0x754 <vfprintf+0x10c>
 722:	36 fe       	sbrs	r3, 6
 724:	06 c0       	rjmp	.+12     	; 0x732 <vfprintf+0xea>
 726:	8a e0       	ldi	r24, 0x0A	; 10
 728:	98 9e       	mul	r9, r24
 72a:	20 0d       	add	r18, r0
 72c:	11 24       	eor	r1, r1
 72e:	92 2e       	mov	r9, r18
 730:	11 c0       	rjmp	.+34     	; 0x754 <vfprintf+0x10c>
 732:	ea e0       	ldi	r30, 0x0A	; 10
 734:	2e 9e       	mul	r2, r30
 736:	20 0d       	add	r18, r0
 738:	11 24       	eor	r1, r1
 73a:	22 2e       	mov	r2, r18
 73c:	f3 2d       	mov	r31, r3
 73e:	f0 62       	ori	r31, 0x20	; 32
 740:	3f 2e       	mov	r3, r31
 742:	08 c0       	rjmp	.+16     	; 0x754 <vfprintf+0x10c>
 744:	8c 36       	cpi	r24, 0x6C	; 108
 746:	21 f4       	brne	.+8      	; 0x750 <vfprintf+0x108>
 748:	83 2d       	mov	r24, r3
 74a:	80 68       	ori	r24, 0x80	; 128
 74c:	38 2e       	mov	r3, r24
 74e:	02 c0       	rjmp	.+4      	; 0x754 <vfprintf+0x10c>
 750:	88 36       	cpi	r24, 0x68	; 104
 752:	41 f4       	brne	.+16     	; 0x764 <vfprintf+0x11c>
 754:	f7 01       	movw	r30, r14
 756:	93 fd       	sbrc	r25, 3
 758:	85 91       	lpm	r24, Z+
 75a:	93 ff       	sbrs	r25, 3
 75c:	81 91       	ld	r24, Z+
 75e:	7f 01       	movw	r14, r30
 760:	81 11       	cpse	r24, r1
 762:	b3 cf       	rjmp	.-154    	; 0x6ca <vfprintf+0x82>
 764:	98 2f       	mov	r25, r24
 766:	9f 7d       	andi	r25, 0xDF	; 223
 768:	95 54       	subi	r25, 0x45	; 69
 76a:	93 30       	cpi	r25, 0x03	; 3
 76c:	28 f4       	brcc	.+10     	; 0x778 <vfprintf+0x130>
 76e:	0c 5f       	subi	r16, 0xFC	; 252
 770:	1f 4f       	sbci	r17, 0xFF	; 255
 772:	9f e3       	ldi	r25, 0x3F	; 63
 774:	99 83       	std	Y+1, r25	; 0x01
 776:	0d c0       	rjmp	.+26     	; 0x792 <vfprintf+0x14a>
 778:	83 36       	cpi	r24, 0x63	; 99
 77a:	31 f0       	breq	.+12     	; 0x788 <vfprintf+0x140>
 77c:	83 37       	cpi	r24, 0x73	; 115
 77e:	71 f0       	breq	.+28     	; 0x79c <vfprintf+0x154>
 780:	83 35       	cpi	r24, 0x53	; 83
 782:	09 f0       	breq	.+2      	; 0x786 <vfprintf+0x13e>
 784:	55 c0       	rjmp	.+170    	; 0x830 <vfprintf+0x1e8>
 786:	20 c0       	rjmp	.+64     	; 0x7c8 <vfprintf+0x180>
 788:	f8 01       	movw	r30, r16
 78a:	80 81       	ld	r24, Z
 78c:	89 83       	std	Y+1, r24	; 0x01
 78e:	0e 5f       	subi	r16, 0xFE	; 254
 790:	1f 4f       	sbci	r17, 0xFF	; 255
 792:	88 24       	eor	r8, r8
 794:	83 94       	inc	r8
 796:	91 2c       	mov	r9, r1
 798:	53 01       	movw	r10, r6
 79a:	12 c0       	rjmp	.+36     	; 0x7c0 <vfprintf+0x178>
 79c:	28 01       	movw	r4, r16
 79e:	f2 e0       	ldi	r31, 0x02	; 2
 7a0:	4f 0e       	add	r4, r31
 7a2:	51 1c       	adc	r5, r1
 7a4:	f8 01       	movw	r30, r16
 7a6:	a0 80       	ld	r10, Z
 7a8:	b1 80       	ldd	r11, Z+1	; 0x01
 7aa:	36 fe       	sbrs	r3, 6
 7ac:	03 c0       	rjmp	.+6      	; 0x7b4 <vfprintf+0x16c>
 7ae:	69 2d       	mov	r22, r9
 7b0:	70 e0       	ldi	r23, 0x00	; 0
 7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <vfprintf+0x170>
 7b4:	6f ef       	ldi	r22, 0xFF	; 255
 7b6:	7f ef       	ldi	r23, 0xFF	; 255
 7b8:	c5 01       	movw	r24, r10
 7ba:	4e d1       	rcall	.+668    	; 0xa58 <strnlen>
 7bc:	4c 01       	movw	r8, r24
 7be:	82 01       	movw	r16, r4
 7c0:	f3 2d       	mov	r31, r3
 7c2:	ff 77       	andi	r31, 0x7F	; 127
 7c4:	3f 2e       	mov	r3, r31
 7c6:	15 c0       	rjmp	.+42     	; 0x7f2 <vfprintf+0x1aa>
 7c8:	28 01       	movw	r4, r16
 7ca:	22 e0       	ldi	r18, 0x02	; 2
 7cc:	42 0e       	add	r4, r18
 7ce:	51 1c       	adc	r5, r1
 7d0:	f8 01       	movw	r30, r16
 7d2:	a0 80       	ld	r10, Z
 7d4:	b1 80       	ldd	r11, Z+1	; 0x01
 7d6:	36 fe       	sbrs	r3, 6
 7d8:	03 c0       	rjmp	.+6      	; 0x7e0 <vfprintf+0x198>
 7da:	69 2d       	mov	r22, r9
 7dc:	70 e0       	ldi	r23, 0x00	; 0
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <vfprintf+0x19c>
 7e0:	6f ef       	ldi	r22, 0xFF	; 255
 7e2:	7f ef       	ldi	r23, 0xFF	; 255
 7e4:	c5 01       	movw	r24, r10
 7e6:	2d d1       	rcall	.+602    	; 0xa42 <strnlen_P>
 7e8:	4c 01       	movw	r8, r24
 7ea:	f3 2d       	mov	r31, r3
 7ec:	f0 68       	ori	r31, 0x80	; 128
 7ee:	3f 2e       	mov	r3, r31
 7f0:	82 01       	movw	r16, r4
 7f2:	33 fc       	sbrc	r3, 3
 7f4:	19 c0       	rjmp	.+50     	; 0x828 <vfprintf+0x1e0>
 7f6:	82 2d       	mov	r24, r2
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	88 16       	cp	r8, r24
 7fc:	99 06       	cpc	r9, r25
 7fe:	a0 f4       	brcc	.+40     	; 0x828 <vfprintf+0x1e0>
 800:	b6 01       	movw	r22, r12
 802:	80 e2       	ldi	r24, 0x20	; 32
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	33 d1       	rcall	.+614    	; 0xa6e <fputc>
 808:	2a 94       	dec	r2
 80a:	f5 cf       	rjmp	.-22     	; 0x7f6 <vfprintf+0x1ae>
 80c:	f5 01       	movw	r30, r10
 80e:	37 fc       	sbrc	r3, 7
 810:	85 91       	lpm	r24, Z+
 812:	37 fe       	sbrs	r3, 7
 814:	81 91       	ld	r24, Z+
 816:	5f 01       	movw	r10, r30
 818:	b6 01       	movw	r22, r12
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	28 d1       	rcall	.+592    	; 0xa6e <fputc>
 81e:	21 10       	cpse	r2, r1
 820:	2a 94       	dec	r2
 822:	21 e0       	ldi	r18, 0x01	; 1
 824:	82 1a       	sub	r8, r18
 826:	91 08       	sbc	r9, r1
 828:	81 14       	cp	r8, r1
 82a:	91 04       	cpc	r9, r1
 82c:	79 f7       	brne	.-34     	; 0x80c <vfprintf+0x1c4>
 82e:	e1 c0       	rjmp	.+450    	; 0x9f2 <vfprintf+0x3aa>
 830:	84 36       	cpi	r24, 0x64	; 100
 832:	11 f0       	breq	.+4      	; 0x838 <vfprintf+0x1f0>
 834:	89 36       	cpi	r24, 0x69	; 105
 836:	39 f5       	brne	.+78     	; 0x886 <vfprintf+0x23e>
 838:	f8 01       	movw	r30, r16
 83a:	37 fe       	sbrs	r3, 7
 83c:	07 c0       	rjmp	.+14     	; 0x84c <vfprintf+0x204>
 83e:	60 81       	ld	r22, Z
 840:	71 81       	ldd	r23, Z+1	; 0x01
 842:	82 81       	ldd	r24, Z+2	; 0x02
 844:	93 81       	ldd	r25, Z+3	; 0x03
 846:	0c 5f       	subi	r16, 0xFC	; 252
 848:	1f 4f       	sbci	r17, 0xFF	; 255
 84a:	08 c0       	rjmp	.+16     	; 0x85c <vfprintf+0x214>
 84c:	60 81       	ld	r22, Z
 84e:	71 81       	ldd	r23, Z+1	; 0x01
 850:	07 2e       	mov	r0, r23
 852:	00 0c       	add	r0, r0
 854:	88 0b       	sbc	r24, r24
 856:	99 0b       	sbc	r25, r25
 858:	0e 5f       	subi	r16, 0xFE	; 254
 85a:	1f 4f       	sbci	r17, 0xFF	; 255
 85c:	f3 2d       	mov	r31, r3
 85e:	ff 76       	andi	r31, 0x6F	; 111
 860:	3f 2e       	mov	r3, r31
 862:	97 ff       	sbrs	r25, 7
 864:	09 c0       	rjmp	.+18     	; 0x878 <vfprintf+0x230>
 866:	90 95       	com	r25
 868:	80 95       	com	r24
 86a:	70 95       	com	r23
 86c:	61 95       	neg	r22
 86e:	7f 4f       	sbci	r23, 0xFF	; 255
 870:	8f 4f       	sbci	r24, 0xFF	; 255
 872:	9f 4f       	sbci	r25, 0xFF	; 255
 874:	f0 68       	ori	r31, 0x80	; 128
 876:	3f 2e       	mov	r3, r31
 878:	2a e0       	ldi	r18, 0x0A	; 10
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	a3 01       	movw	r20, r6
 87e:	33 d1       	rcall	.+614    	; 0xae6 <__ultoa_invert>
 880:	88 2e       	mov	r8, r24
 882:	86 18       	sub	r8, r6
 884:	44 c0       	rjmp	.+136    	; 0x90e <vfprintf+0x2c6>
 886:	85 37       	cpi	r24, 0x75	; 117
 888:	31 f4       	brne	.+12     	; 0x896 <vfprintf+0x24e>
 88a:	23 2d       	mov	r18, r3
 88c:	2f 7e       	andi	r18, 0xEF	; 239
 88e:	b2 2e       	mov	r11, r18
 890:	2a e0       	ldi	r18, 0x0A	; 10
 892:	30 e0       	ldi	r19, 0x00	; 0
 894:	25 c0       	rjmp	.+74     	; 0x8e0 <vfprintf+0x298>
 896:	93 2d       	mov	r25, r3
 898:	99 7f       	andi	r25, 0xF9	; 249
 89a:	b9 2e       	mov	r11, r25
 89c:	8f 36       	cpi	r24, 0x6F	; 111
 89e:	c1 f0       	breq	.+48     	; 0x8d0 <vfprintf+0x288>
 8a0:	18 f4       	brcc	.+6      	; 0x8a8 <vfprintf+0x260>
 8a2:	88 35       	cpi	r24, 0x58	; 88
 8a4:	79 f0       	breq	.+30     	; 0x8c4 <vfprintf+0x27c>
 8a6:	ae c0       	rjmp	.+348    	; 0xa04 <vfprintf+0x3bc>
 8a8:	80 37       	cpi	r24, 0x70	; 112
 8aa:	19 f0       	breq	.+6      	; 0x8b2 <vfprintf+0x26a>
 8ac:	88 37       	cpi	r24, 0x78	; 120
 8ae:	21 f0       	breq	.+8      	; 0x8b8 <vfprintf+0x270>
 8b0:	a9 c0       	rjmp	.+338    	; 0xa04 <vfprintf+0x3bc>
 8b2:	e9 2f       	mov	r30, r25
 8b4:	e0 61       	ori	r30, 0x10	; 16
 8b6:	be 2e       	mov	r11, r30
 8b8:	b4 fe       	sbrs	r11, 4
 8ba:	0d c0       	rjmp	.+26     	; 0x8d6 <vfprintf+0x28e>
 8bc:	fb 2d       	mov	r31, r11
 8be:	f4 60       	ori	r31, 0x04	; 4
 8c0:	bf 2e       	mov	r11, r31
 8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <vfprintf+0x28e>
 8c4:	34 fe       	sbrs	r3, 4
 8c6:	0a c0       	rjmp	.+20     	; 0x8dc <vfprintf+0x294>
 8c8:	29 2f       	mov	r18, r25
 8ca:	26 60       	ori	r18, 0x06	; 6
 8cc:	b2 2e       	mov	r11, r18
 8ce:	06 c0       	rjmp	.+12     	; 0x8dc <vfprintf+0x294>
 8d0:	28 e0       	ldi	r18, 0x08	; 8
 8d2:	30 e0       	ldi	r19, 0x00	; 0
 8d4:	05 c0       	rjmp	.+10     	; 0x8e0 <vfprintf+0x298>
 8d6:	20 e1       	ldi	r18, 0x10	; 16
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	02 c0       	rjmp	.+4      	; 0x8e0 <vfprintf+0x298>
 8dc:	20 e1       	ldi	r18, 0x10	; 16
 8de:	32 e0       	ldi	r19, 0x02	; 2
 8e0:	f8 01       	movw	r30, r16
 8e2:	b7 fe       	sbrs	r11, 7
 8e4:	07 c0       	rjmp	.+14     	; 0x8f4 <vfprintf+0x2ac>
 8e6:	60 81       	ld	r22, Z
 8e8:	71 81       	ldd	r23, Z+1	; 0x01
 8ea:	82 81       	ldd	r24, Z+2	; 0x02
 8ec:	93 81       	ldd	r25, Z+3	; 0x03
 8ee:	0c 5f       	subi	r16, 0xFC	; 252
 8f0:	1f 4f       	sbci	r17, 0xFF	; 255
 8f2:	06 c0       	rjmp	.+12     	; 0x900 <vfprintf+0x2b8>
 8f4:	60 81       	ld	r22, Z
 8f6:	71 81       	ldd	r23, Z+1	; 0x01
 8f8:	80 e0       	ldi	r24, 0x00	; 0
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	0e 5f       	subi	r16, 0xFE	; 254
 8fe:	1f 4f       	sbci	r17, 0xFF	; 255
 900:	a3 01       	movw	r20, r6
 902:	f1 d0       	rcall	.+482    	; 0xae6 <__ultoa_invert>
 904:	88 2e       	mov	r8, r24
 906:	86 18       	sub	r8, r6
 908:	fb 2d       	mov	r31, r11
 90a:	ff 77       	andi	r31, 0x7F	; 127
 90c:	3f 2e       	mov	r3, r31
 90e:	36 fe       	sbrs	r3, 6
 910:	0d c0       	rjmp	.+26     	; 0x92c <vfprintf+0x2e4>
 912:	23 2d       	mov	r18, r3
 914:	2e 7f       	andi	r18, 0xFE	; 254
 916:	a2 2e       	mov	r10, r18
 918:	89 14       	cp	r8, r9
 91a:	58 f4       	brcc	.+22     	; 0x932 <vfprintf+0x2ea>
 91c:	34 fe       	sbrs	r3, 4
 91e:	0b c0       	rjmp	.+22     	; 0x936 <vfprintf+0x2ee>
 920:	32 fc       	sbrc	r3, 2
 922:	09 c0       	rjmp	.+18     	; 0x936 <vfprintf+0x2ee>
 924:	83 2d       	mov	r24, r3
 926:	8e 7e       	andi	r24, 0xEE	; 238
 928:	a8 2e       	mov	r10, r24
 92a:	05 c0       	rjmp	.+10     	; 0x936 <vfprintf+0x2ee>
 92c:	b8 2c       	mov	r11, r8
 92e:	a3 2c       	mov	r10, r3
 930:	03 c0       	rjmp	.+6      	; 0x938 <vfprintf+0x2f0>
 932:	b8 2c       	mov	r11, r8
 934:	01 c0       	rjmp	.+2      	; 0x938 <vfprintf+0x2f0>
 936:	b9 2c       	mov	r11, r9
 938:	a4 fe       	sbrs	r10, 4
 93a:	0f c0       	rjmp	.+30     	; 0x95a <vfprintf+0x312>
 93c:	fe 01       	movw	r30, r28
 93e:	e8 0d       	add	r30, r8
 940:	f1 1d       	adc	r31, r1
 942:	80 81       	ld	r24, Z
 944:	80 33       	cpi	r24, 0x30	; 48
 946:	21 f4       	brne	.+8      	; 0x950 <vfprintf+0x308>
 948:	9a 2d       	mov	r25, r10
 94a:	99 7e       	andi	r25, 0xE9	; 233
 94c:	a9 2e       	mov	r10, r25
 94e:	09 c0       	rjmp	.+18     	; 0x962 <vfprintf+0x31a>
 950:	a2 fe       	sbrs	r10, 2
 952:	06 c0       	rjmp	.+12     	; 0x960 <vfprintf+0x318>
 954:	b3 94       	inc	r11
 956:	b3 94       	inc	r11
 958:	04 c0       	rjmp	.+8      	; 0x962 <vfprintf+0x31a>
 95a:	8a 2d       	mov	r24, r10
 95c:	86 78       	andi	r24, 0x86	; 134
 95e:	09 f0       	breq	.+2      	; 0x962 <vfprintf+0x31a>
 960:	b3 94       	inc	r11
 962:	a3 fc       	sbrc	r10, 3
 964:	10 c0       	rjmp	.+32     	; 0x986 <vfprintf+0x33e>
 966:	a0 fe       	sbrs	r10, 0
 968:	06 c0       	rjmp	.+12     	; 0x976 <vfprintf+0x32e>
 96a:	b2 14       	cp	r11, r2
 96c:	80 f4       	brcc	.+32     	; 0x98e <vfprintf+0x346>
 96e:	28 0c       	add	r2, r8
 970:	92 2c       	mov	r9, r2
 972:	9b 18       	sub	r9, r11
 974:	0d c0       	rjmp	.+26     	; 0x990 <vfprintf+0x348>
 976:	b2 14       	cp	r11, r2
 978:	58 f4       	brcc	.+22     	; 0x990 <vfprintf+0x348>
 97a:	b6 01       	movw	r22, r12
 97c:	80 e2       	ldi	r24, 0x20	; 32
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	76 d0       	rcall	.+236    	; 0xa6e <fputc>
 982:	b3 94       	inc	r11
 984:	f8 cf       	rjmp	.-16     	; 0x976 <vfprintf+0x32e>
 986:	b2 14       	cp	r11, r2
 988:	18 f4       	brcc	.+6      	; 0x990 <vfprintf+0x348>
 98a:	2b 18       	sub	r2, r11
 98c:	02 c0       	rjmp	.+4      	; 0x992 <vfprintf+0x34a>
 98e:	98 2c       	mov	r9, r8
 990:	21 2c       	mov	r2, r1
 992:	a4 fe       	sbrs	r10, 4
 994:	0f c0       	rjmp	.+30     	; 0x9b4 <vfprintf+0x36c>
 996:	b6 01       	movw	r22, r12
 998:	80 e3       	ldi	r24, 0x30	; 48
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	68 d0       	rcall	.+208    	; 0xa6e <fputc>
 99e:	a2 fe       	sbrs	r10, 2
 9a0:	16 c0       	rjmp	.+44     	; 0x9ce <vfprintf+0x386>
 9a2:	a1 fc       	sbrc	r10, 1
 9a4:	03 c0       	rjmp	.+6      	; 0x9ac <vfprintf+0x364>
 9a6:	88 e7       	ldi	r24, 0x78	; 120
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <vfprintf+0x368>
 9ac:	88 e5       	ldi	r24, 0x58	; 88
 9ae:	90 e0       	ldi	r25, 0x00	; 0
 9b0:	b6 01       	movw	r22, r12
 9b2:	0c c0       	rjmp	.+24     	; 0x9cc <vfprintf+0x384>
 9b4:	8a 2d       	mov	r24, r10
 9b6:	86 78       	andi	r24, 0x86	; 134
 9b8:	51 f0       	breq	.+20     	; 0x9ce <vfprintf+0x386>
 9ba:	a1 fe       	sbrs	r10, 1
 9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <vfprintf+0x37a>
 9be:	8b e2       	ldi	r24, 0x2B	; 43
 9c0:	01 c0       	rjmp	.+2      	; 0x9c4 <vfprintf+0x37c>
 9c2:	80 e2       	ldi	r24, 0x20	; 32
 9c4:	a7 fc       	sbrc	r10, 7
 9c6:	8d e2       	ldi	r24, 0x2D	; 45
 9c8:	b6 01       	movw	r22, r12
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	50 d0       	rcall	.+160    	; 0xa6e <fputc>
 9ce:	89 14       	cp	r8, r9
 9d0:	30 f4       	brcc	.+12     	; 0x9de <vfprintf+0x396>
 9d2:	b6 01       	movw	r22, r12
 9d4:	80 e3       	ldi	r24, 0x30	; 48
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	4a d0       	rcall	.+148    	; 0xa6e <fputc>
 9da:	9a 94       	dec	r9
 9dc:	f8 cf       	rjmp	.-16     	; 0x9ce <vfprintf+0x386>
 9de:	8a 94       	dec	r8
 9e0:	f3 01       	movw	r30, r6
 9e2:	e8 0d       	add	r30, r8
 9e4:	f1 1d       	adc	r31, r1
 9e6:	80 81       	ld	r24, Z
 9e8:	b6 01       	movw	r22, r12
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	40 d0       	rcall	.+128    	; 0xa6e <fputc>
 9ee:	81 10       	cpse	r8, r1
 9f0:	f6 cf       	rjmp	.-20     	; 0x9de <vfprintf+0x396>
 9f2:	22 20       	and	r2, r2
 9f4:	09 f4       	brne	.+2      	; 0x9f8 <vfprintf+0x3b0>
 9f6:	4e ce       	rjmp	.-868    	; 0x694 <vfprintf+0x4c>
 9f8:	b6 01       	movw	r22, r12
 9fa:	80 e2       	ldi	r24, 0x20	; 32
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	37 d0       	rcall	.+110    	; 0xa6e <fputc>
 a00:	2a 94       	dec	r2
 a02:	f7 cf       	rjmp	.-18     	; 0x9f2 <vfprintf+0x3aa>
 a04:	f6 01       	movw	r30, r12
 a06:	86 81       	ldd	r24, Z+6	; 0x06
 a08:	97 81       	ldd	r25, Z+7	; 0x07
 a0a:	02 c0       	rjmp	.+4      	; 0xa10 <vfprintf+0x3c8>
 a0c:	8f ef       	ldi	r24, 0xFF	; 255
 a0e:	9f ef       	ldi	r25, 0xFF	; 255
 a10:	2b 96       	adiw	r28, 0x0b	; 11
 a12:	0f b6       	in	r0, 0x3f	; 63
 a14:	f8 94       	cli
 a16:	de bf       	out	0x3e, r29	; 62
 a18:	0f be       	out	0x3f, r0	; 63
 a1a:	cd bf       	out	0x3d, r28	; 61
 a1c:	df 91       	pop	r29
 a1e:	cf 91       	pop	r28
 a20:	1f 91       	pop	r17
 a22:	0f 91       	pop	r16
 a24:	ff 90       	pop	r15
 a26:	ef 90       	pop	r14
 a28:	df 90       	pop	r13
 a2a:	cf 90       	pop	r12
 a2c:	bf 90       	pop	r11
 a2e:	af 90       	pop	r10
 a30:	9f 90       	pop	r9
 a32:	8f 90       	pop	r8
 a34:	7f 90       	pop	r7
 a36:	6f 90       	pop	r6
 a38:	5f 90       	pop	r5
 a3a:	4f 90       	pop	r4
 a3c:	3f 90       	pop	r3
 a3e:	2f 90       	pop	r2
 a40:	08 95       	ret

00000a42 <strnlen_P>:
 a42:	fc 01       	movw	r30, r24
 a44:	05 90       	lpm	r0, Z+
 a46:	61 50       	subi	r22, 0x01	; 1
 a48:	70 40       	sbci	r23, 0x00	; 0
 a4a:	01 10       	cpse	r0, r1
 a4c:	d8 f7       	brcc	.-10     	; 0xa44 <strnlen_P+0x2>
 a4e:	80 95       	com	r24
 a50:	90 95       	com	r25
 a52:	8e 0f       	add	r24, r30
 a54:	9f 1f       	adc	r25, r31
 a56:	08 95       	ret

00000a58 <strnlen>:
 a58:	fc 01       	movw	r30, r24
 a5a:	61 50       	subi	r22, 0x01	; 1
 a5c:	70 40       	sbci	r23, 0x00	; 0
 a5e:	01 90       	ld	r0, Z+
 a60:	01 10       	cpse	r0, r1
 a62:	d8 f7       	brcc	.-10     	; 0xa5a <strnlen+0x2>
 a64:	80 95       	com	r24
 a66:	90 95       	com	r25
 a68:	8e 0f       	add	r24, r30
 a6a:	9f 1f       	adc	r25, r31
 a6c:	08 95       	ret

00000a6e <fputc>:
 a6e:	0f 93       	push	r16
 a70:	1f 93       	push	r17
 a72:	cf 93       	push	r28
 a74:	df 93       	push	r29
 a76:	fb 01       	movw	r30, r22
 a78:	23 81       	ldd	r18, Z+3	; 0x03
 a7a:	21 fd       	sbrc	r18, 1
 a7c:	03 c0       	rjmp	.+6      	; 0xa84 <fputc+0x16>
 a7e:	8f ef       	ldi	r24, 0xFF	; 255
 a80:	9f ef       	ldi	r25, 0xFF	; 255
 a82:	2c c0       	rjmp	.+88     	; 0xadc <fputc+0x6e>
 a84:	22 ff       	sbrs	r18, 2
 a86:	16 c0       	rjmp	.+44     	; 0xab4 <fputc+0x46>
 a88:	46 81       	ldd	r20, Z+6	; 0x06
 a8a:	57 81       	ldd	r21, Z+7	; 0x07
 a8c:	24 81       	ldd	r18, Z+4	; 0x04
 a8e:	35 81       	ldd	r19, Z+5	; 0x05
 a90:	42 17       	cp	r20, r18
 a92:	53 07       	cpc	r21, r19
 a94:	44 f4       	brge	.+16     	; 0xaa6 <fputc+0x38>
 a96:	a0 81       	ld	r26, Z
 a98:	b1 81       	ldd	r27, Z+1	; 0x01
 a9a:	9d 01       	movw	r18, r26
 a9c:	2f 5f       	subi	r18, 0xFF	; 255
 a9e:	3f 4f       	sbci	r19, 0xFF	; 255
 aa0:	31 83       	std	Z+1, r19	; 0x01
 aa2:	20 83       	st	Z, r18
 aa4:	8c 93       	st	X, r24
 aa6:	26 81       	ldd	r18, Z+6	; 0x06
 aa8:	37 81       	ldd	r19, Z+7	; 0x07
 aaa:	2f 5f       	subi	r18, 0xFF	; 255
 aac:	3f 4f       	sbci	r19, 0xFF	; 255
 aae:	37 83       	std	Z+7, r19	; 0x07
 ab0:	26 83       	std	Z+6, r18	; 0x06
 ab2:	14 c0       	rjmp	.+40     	; 0xadc <fputc+0x6e>
 ab4:	8b 01       	movw	r16, r22
 ab6:	ec 01       	movw	r28, r24
 ab8:	fb 01       	movw	r30, r22
 aba:	00 84       	ldd	r0, Z+8	; 0x08
 abc:	f1 85       	ldd	r31, Z+9	; 0x09
 abe:	e0 2d       	mov	r30, r0
 ac0:	09 95       	icall
 ac2:	89 2b       	or	r24, r25
 ac4:	e1 f6       	brne	.-72     	; 0xa7e <fputc+0x10>
 ac6:	d8 01       	movw	r26, r16
 ac8:	16 96       	adiw	r26, 0x06	; 6
 aca:	8d 91       	ld	r24, X+
 acc:	9c 91       	ld	r25, X
 ace:	17 97       	sbiw	r26, 0x07	; 7
 ad0:	01 96       	adiw	r24, 0x01	; 1
 ad2:	17 96       	adiw	r26, 0x07	; 7
 ad4:	9c 93       	st	X, r25
 ad6:	8e 93       	st	-X, r24
 ad8:	16 97       	sbiw	r26, 0x06	; 6
 ada:	ce 01       	movw	r24, r28
 adc:	df 91       	pop	r29
 ade:	cf 91       	pop	r28
 ae0:	1f 91       	pop	r17
 ae2:	0f 91       	pop	r16
 ae4:	08 95       	ret

00000ae6 <__ultoa_invert>:
 ae6:	fa 01       	movw	r30, r20
 ae8:	aa 27       	eor	r26, r26
 aea:	28 30       	cpi	r18, 0x08	; 8
 aec:	51 f1       	breq	.+84     	; 0xb42 <__ultoa_invert+0x5c>
 aee:	20 31       	cpi	r18, 0x10	; 16
 af0:	81 f1       	breq	.+96     	; 0xb52 <__ultoa_invert+0x6c>
 af2:	e8 94       	clt
 af4:	6f 93       	push	r22
 af6:	6e 7f       	andi	r22, 0xFE	; 254
 af8:	6e 5f       	subi	r22, 0xFE	; 254
 afa:	7f 4f       	sbci	r23, 0xFF	; 255
 afc:	8f 4f       	sbci	r24, 0xFF	; 255
 afe:	9f 4f       	sbci	r25, 0xFF	; 255
 b00:	af 4f       	sbci	r26, 0xFF	; 255
 b02:	b1 e0       	ldi	r27, 0x01	; 1
 b04:	3e d0       	rcall	.+124    	; 0xb82 <__ultoa_invert+0x9c>
 b06:	b4 e0       	ldi	r27, 0x04	; 4
 b08:	3c d0       	rcall	.+120    	; 0xb82 <__ultoa_invert+0x9c>
 b0a:	67 0f       	add	r22, r23
 b0c:	78 1f       	adc	r23, r24
 b0e:	89 1f       	adc	r24, r25
 b10:	9a 1f       	adc	r25, r26
 b12:	a1 1d       	adc	r26, r1
 b14:	68 0f       	add	r22, r24
 b16:	79 1f       	adc	r23, r25
 b18:	8a 1f       	adc	r24, r26
 b1a:	91 1d       	adc	r25, r1
 b1c:	a1 1d       	adc	r26, r1
 b1e:	6a 0f       	add	r22, r26
 b20:	71 1d       	adc	r23, r1
 b22:	81 1d       	adc	r24, r1
 b24:	91 1d       	adc	r25, r1
 b26:	a1 1d       	adc	r26, r1
 b28:	20 d0       	rcall	.+64     	; 0xb6a <__ultoa_invert+0x84>
 b2a:	09 f4       	brne	.+2      	; 0xb2e <__ultoa_invert+0x48>
 b2c:	68 94       	set
 b2e:	3f 91       	pop	r19
 b30:	2a e0       	ldi	r18, 0x0A	; 10
 b32:	26 9f       	mul	r18, r22
 b34:	11 24       	eor	r1, r1
 b36:	30 19       	sub	r19, r0
 b38:	30 5d       	subi	r19, 0xD0	; 208
 b3a:	31 93       	st	Z+, r19
 b3c:	de f6       	brtc	.-74     	; 0xaf4 <__ultoa_invert+0xe>
 b3e:	cf 01       	movw	r24, r30
 b40:	08 95       	ret
 b42:	46 2f       	mov	r20, r22
 b44:	47 70       	andi	r20, 0x07	; 7
 b46:	40 5d       	subi	r20, 0xD0	; 208
 b48:	41 93       	st	Z+, r20
 b4a:	b3 e0       	ldi	r27, 0x03	; 3
 b4c:	0f d0       	rcall	.+30     	; 0xb6c <__ultoa_invert+0x86>
 b4e:	c9 f7       	brne	.-14     	; 0xb42 <__ultoa_invert+0x5c>
 b50:	f6 cf       	rjmp	.-20     	; 0xb3e <__ultoa_invert+0x58>
 b52:	46 2f       	mov	r20, r22
 b54:	4f 70       	andi	r20, 0x0F	; 15
 b56:	40 5d       	subi	r20, 0xD0	; 208
 b58:	4a 33       	cpi	r20, 0x3A	; 58
 b5a:	18 f0       	brcs	.+6      	; 0xb62 <__ultoa_invert+0x7c>
 b5c:	49 5d       	subi	r20, 0xD9	; 217
 b5e:	31 fd       	sbrc	r19, 1
 b60:	40 52       	subi	r20, 0x20	; 32
 b62:	41 93       	st	Z+, r20
 b64:	02 d0       	rcall	.+4      	; 0xb6a <__ultoa_invert+0x84>
 b66:	a9 f7       	brne	.-22     	; 0xb52 <__ultoa_invert+0x6c>
 b68:	ea cf       	rjmp	.-44     	; 0xb3e <__ultoa_invert+0x58>
 b6a:	b4 e0       	ldi	r27, 0x04	; 4
 b6c:	a6 95       	lsr	r26
 b6e:	97 95       	ror	r25
 b70:	87 95       	ror	r24
 b72:	77 95       	ror	r23
 b74:	67 95       	ror	r22
 b76:	ba 95       	dec	r27
 b78:	c9 f7       	brne	.-14     	; 0xb6c <__ultoa_invert+0x86>
 b7a:	00 97       	sbiw	r24, 0x00	; 0
 b7c:	61 05       	cpc	r22, r1
 b7e:	71 05       	cpc	r23, r1
 b80:	08 95       	ret
 b82:	9b 01       	movw	r18, r22
 b84:	ac 01       	movw	r20, r24
 b86:	0a 2e       	mov	r0, r26
 b88:	06 94       	lsr	r0
 b8a:	57 95       	ror	r21
 b8c:	47 95       	ror	r20
 b8e:	37 95       	ror	r19
 b90:	27 95       	ror	r18
 b92:	ba 95       	dec	r27
 b94:	c9 f7       	brne	.-14     	; 0xb88 <__ultoa_invert+0xa2>
 b96:	62 0f       	add	r22, r18
 b98:	73 1f       	adc	r23, r19
 b9a:	84 1f       	adc	r24, r20
 b9c:	95 1f       	adc	r25, r21
 b9e:	a0 1d       	adc	r26, r0
 ba0:	08 95       	ret

00000ba2 <_exit>:
 ba2:	f8 94       	cli

00000ba4 <__stop_program>:
 ba4:	ff cf       	rjmp	.-2      	; 0xba4 <__stop_program>
